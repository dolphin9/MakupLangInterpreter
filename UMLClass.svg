<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="898.8px" preserveAspectRatio="none" style="width:1010px;height:898px;background:#EEEBDC;" version="1.1" viewBox="0 0 1010 898" width="1010.8px" zoomAndPan="magnify"><defs><filter height="300%" id="f1qn3ii2nq0zjy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.799999952316284"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.599999904632568" dy="5.599999904632568" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Context--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="154.4484" id="Context" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="350" x="30.8" y="729.4"/><ellipse cx="170.45" cy="751.8" fill="#B4A7E5" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M164.7406,745.8719 L164.7406,742.8531 L175.0875,742.8531 L175.0875,745.8719 L171.6312,745.8719 L171.6312,757.1812 L175.0875,757.1812 L175.0875,760.2 L164.7406,760.2 L164.7406,757.1812 L168.1969,757.1812 L168.1969,745.8719 L164.7406,745.8719 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58.8" x="199.15" y="758.1492">Context</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="32.2" x2="379.4" y1="774.2" y2="774.2"/><line style="stroke: #A80036; stroke-width: 1.399999976158142;" x1="32.2" x2="379.4" y1="785.4" y2="785.4"/><ellipse cx="46.2" cy="801.206" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="313.6" x="58.8" y="804.9262">Value  nextInstruction(Fragment)</text><ellipse cx="46.2" cy="817.4182" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="196" x="58.8" y="821.1383">void   run(Fragment)</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="32.2" x2="379.4" y1="829.0242" y2="829.0242"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="176.4" x="39.2" y="848.5504">Implementation of the</text><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="107.8" x="224" y="848.5504">SymbolTable</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="32.2" x2="379.4" y1="856.4363" y2="856.4363"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="137.2" x="39.2" y="875.9625">I/O operations</text><!--class Executable--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="115.8363" id="Executable" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="338.8" x="208.6" y="11.2"/><ellipse cx="330.05" cy="33.6" fill="#B4A7E5" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M324.3406,27.6719 L324.3406,24.6531 L334.6875,24.6531 L334.6875,27.6719 L331.2312,27.6719 L331.2312,38.9812 L334.6875,38.9812 L334.6875,42 L324.3406,42 L324.3406,38.9812 L327.7969,38.9812 L327.7969,27.6719 L324.3406,27.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="358.75" y="39.9492">Executable</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="210" x2="546" y1="56" y2="56"/><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="210" x2="546" y1="67.2" y2="67.2"/><ellipse cx="224" cy="83.0061" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="210" x="236.6" y="86.7262">Value    execute(Context)</text><ellipse cx="224" cy="99.2182" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="243.6" x="236.6" y="102.9383">boolean  needsMoreArguments()</text><ellipse cx="224" cy="115.4303" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="302.4" x="236.6" y="119.1504">void     addArgument(Value argument)</text><!--class Fragment--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="99.6242" id="Fragment" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="280" x="65.8" y="546"/><ellipse cx="166.25" cy="568.4" fill="#B4A7E5" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M160.5406,562.4719 L160.5406,559.4531 L170.8875,559.4531 L170.8875,562.4719 L167.4312,562.4719 L167.4312,573.7812 L170.8875,573.7812 L170.8875,576.8 L160.5406,576.8 L160.5406,573.7812 L163.9969,573.7812 L163.9969,562.4719 L160.5406,562.4719 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67.2" x="194.95" y="574.7492">Fragment</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="67.2" x2="344.4" y1="590.8" y2="590.8"/><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="67.2" x2="344.4" y1="602" y2="602"/><ellipse cx="81.2" cy="617.806" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="243.6" x="93.8" y="621.5262">boolean  hasNextInstruction()</text><ellipse cx="81.2" cy="634.0182" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="243.6" x="93.8" y="637.7383">Value    nextRawInstruction()</text><!--class FunctionContext--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="143.2484" id="FunctionContext" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="296.8" x="429.8" y="735"/><ellipse cx="509.25" cy="757.4" fill="#B4A7E5" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M503.5406,751.4719 L503.5406,748.4531 L513.8875,748.4531 L513.8875,751.4719 L510.4312,751.4719 L510.4312,762.7812 L513.8875,762.7812 L513.8875,765.8 L503.5406,765.8 L503.5406,762.7812 L506.9969,762.7812 L506.9969,751.4719 L503.5406,751.4719 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="126" x="537.95" y="763.7492">FunctionContext</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="431.2" x2="725.2" y1="779.8" y2="779.8"/><line style="stroke: #A80036; stroke-width: 1.399999976158142;" x1="431.2" x2="725.2" y1="791" y2="791"/><ellipse cx="445.2" cy="806.806" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="218.4" x="457.8" y="810.5262">Value     getOutputValue()</text><ellipse cx="445.2" cy="823.0182" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="260.4" x="457.8" y="826.7383">void      setOutputValue(Value)</text><ellipse cx="445.2" cy="839.2303" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="134.4" x="457.8" y="842.9504">void      stop()</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="431.2" x2="725.2" y1="850.8363" y2="850.8363"/><ellipse cx="445.2" cy="866.6424" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="235.2" x="457.8" y="870.3625">Context   getGlobalContext()</text><!--class Operator--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="142.6605" id="Operator" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="338.8" x="8.4" y="265.3"/><ellipse cx="138.25" cy="287.7" fill="#A9DCDF" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M138.4031,281.1812 L136.7844,288.2906 L140.0437,288.2906 L138.4031,281.1812 Z M136.325,278.0531 L140.5031,278.0531 L145.2062,295.4 L141.7719,295.4 L140.7,291.1125 L136.1062,291.1125 L135.0562,295.4 L131.6437,295.4 L136.325,278.0531 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67.2" x="166.95" y="294.0492">Operator</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="9.8" x2="345.8" y1="310.1" y2="310.1"/><ellipse cx="23.8" cy="325.906" fill="none" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="302.4" x="36.4" y="329.6262">DEFINED_OPS = {"make", "print", ...}</text><line style="stroke: #000000; stroke-width: 1.0;" x1="36.4" x2="338.8" y1="332.4262" y2="332.4262"/><ellipse cx="23.8" cy="363.9303" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="235.2" x="36.4" y="367.6504">Value   execute(Context)</text><ellipse cx="23.8" cy="380.1424" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="243.6" x="36.4" y="383.8625">boolean  needsMoreArguments()</text><ellipse cx="23.8" cy="396.3545" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="302.4" x="36.4" y="400.0746">void     addArgument(Value argument)</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="9.8" x2="140" y1="345.6182" y2="345.6182"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="75.6" x="140" y="350.7383">@override</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="215.6" x2="345.8" y1="345.6182" y2="345.6182"/><!--class Function--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="251.1332" id="Function" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="364" x="396.2" y="211.4"/><ellipse cx="538.65" cy="233.8" fill="#ADD1B2" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M542.8062,241.6969 Q541.9969,242.1125 541.1,242.3203 Q540.2031,242.5281 539.2187,242.5281 Q535.7187,242.5281 533.8703,240.2203 Q532.0219,237.9125 532.0219,233.5375 Q532.0219,229.1625 533.8703,226.8437 Q535.7187,224.525 539.2187,224.525 Q540.2031,224.525 541.1109,224.7437 Q542.0187,224.9625 542.8062,225.3781 L542.8062,229.1844 Q541.9312,228.375 541.1,227.9922 Q540.2687,227.6094 539.3937,227.6094 Q537.5125,227.6094 536.55,229.1078 Q535.5875,230.6062 535.5875,233.5375 Q535.5875,236.4687 536.55,237.9672 Q537.5125,239.4656 539.3937,239.4656 Q540.2687,239.4656 541.1,239.0828 Q541.9312,238.7 542.8062,237.8906 L542.8062,241.6969 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" lengthAdjust="spacingAndGlyphs" textLength="67.2" x="567.35" y="240.1492">Function</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="397.6" x2="758.8" y1="256.2" y2="256.2"/><rect fill="none" height="8.4" style="stroke: #C82930; stroke-width: 1.399999976158142;" width="8.4" x="407.4" y="267.8061"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277.2" x="424.2" y="275.7262">FUNCTION_OPS = {"stop", "output"}</text><line style="stroke: #000000; stroke-width: 1.0;" x1="424.2" x2="701.4" y1="278.5262" y2="278.5262"/><rect fill="none" height="8.4" style="stroke: #C82930; stroke-width: 1.399999976158142;" width="8.4" x="407.4" y="284.0182"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="268.8" x="424.2" y="291.9383">List&lt;WordValue&gt;   mFormalArgList</text><rect fill="none" height="8.4" style="stroke: #C82930; stroke-width: 1.399999976158142;" width="8.4" x="407.4" y="300.2303"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="268.8" x="424.2" y="308.1504">List&lt;Value&gt;       mActualArgList</text><rect fill="none" height="8.4" style="stroke: #C82930; stroke-width: 1.399999976158142;" width="8.4" x="407.4" y="316.4424"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="285.6" x="424.2" y="324.3625">List&lt;Value&gt;       mInstructionList</text><rect fill="none" height="8.4" style="stroke: #C82930; stroke-width: 1.399999976158142;" width="8.4" x="407.4" y="332.6545"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="260.4" x="424.2" y="340.5746">LocalContext      mLocalContext</text><line style="stroke: #A80036; stroke-width: 1.399999976158142;" x1="397.6" x2="758.8" y1="348.4605" y2="348.4605"/><line style="stroke: #A80036; stroke-width: 1.399999976158142;" x1="397.6" x2="758.8" y1="351.2605" y2="351.2605"/><ellipse cx="411.6" cy="364.2666" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="327.6" x="424.2" y="367.9867">Function(String name, List&lt;Value&gt; list)</text><ellipse cx="411.6" cy="380.4787" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="243.6" x="424.2" y="384.1988">boolean isFunction(ListValue)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="424.2" x2="667.8" y1="386.9988" y2="386.9988"/><ellipse cx="411.6" cy="418.5029" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="235.2" x="424.2" y="422.223">Value   execute(Context)</text><ellipse cx="411.6" cy="434.715" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="243.6" x="424.2" y="438.4351">boolean  needsMoreArguments()</text><ellipse cx="411.6" cy="450.9271" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="302.4" x="424.2" y="454.6473">void     addArgument(Value argument)</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="397.6" x2="540.4" y1="400.1908" y2="400.1908"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" textLength="75.6" x="540.4" y="405.3109">@override</text><line style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 1.0,2.0;" x1="616" x2="758.8" y1="400.1908" y2="400.1908"/><!--class Expression--><rect fill="#FEFECE" filter="url(#f1qn3ii2nq0zjy)" height="115.8363" id="Expression" style="stroke: #A80036; stroke-width: 2.099999964237213;" width="399" x="597.1" y="11.2"/><ellipse cx="748.65" cy="33.6" fill="#ADD1B2" rx="15.4" ry="15.4" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><path d="M752.8062,41.4969 Q751.9969,41.9125 751.1,42.1203 Q750.2031,42.3281 749.2187,42.3281 Q745.7187,42.3281 743.8703,40.0203 Q742.0219,37.7125 742.0219,33.3375 Q742.0219,28.9625 743.8703,26.6437 Q745.7187,24.325 749.2187,24.325 Q750.2031,24.325 751.1109,24.5437 Q752.0187,24.7625 752.8062,25.1781 L752.8062,28.9844 Q751.9312,28.175 751.1,27.7922 Q750.2687,27.4094 749.3937,27.4094 Q747.5125,27.4094 746.55,28.9078 Q745.5875,30.4062 745.5875,33.3375 Q745.5875,36.2687 746.55,37.7672 Q747.5125,39.2656 749.3937,39.2656 Q750.2687,39.2656 751.1,38.8828 Q751.9312,38.5 752.8062,37.6906 L752.8062,41.4969 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8" lengthAdjust="spacingAndGlyphs" textLength="84" x="777.35" y="39.9492">Expression</text><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="598.5" x2="994.7" y1="56" y2="56"/><line style="stroke: #A80036; stroke-width: 2.099999964237213;" x1="598.5" x2="994.7" y1="67.2" y2="67.2"/><ellipse cx="612.5" cy="83.0061" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="625.1" y="86.7262">boolean   isExpression(String)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="625.1" x2="877.1" y1="89.5262" y2="89.5262"/><ellipse cx="612.5" cy="99.2182" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277.2" x="625.1" y="102.9383">WordValue build(String, Fragment)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="625.1" x2="902.3" y1="105.7383" y2="105.7383"/><ellipse cx="612.5" cy="115.4303" fill="#84BE84" rx="4.2" ry="4.2" style="stroke: #038048; stroke-width: 1.399999976158142;"/><text fill="#000000" font-family="sans-serif" font-size="15.4" font-weight="bold" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="362.6" x="625.1" y="119.1504">Value    evaluate(Context, WordValue)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="625.1" x2="987.7" y1="121.9504" y2="121.9504"/><!--link Context to FunctionContext--><path d="M409.1332,806.4 C415.954,806.4 422.7762,806.4 429.597,806.4 " fill="none" id="Context-FunctionContext" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><polygon fill="none" points="409.0898,816.1998,381.0898,806.4,409.0898,796.5998,409.0898,816.1998" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><!--link Fragment to Context--><path d="M205.8,673.8578 C205.8,691.9612 205.8,711.2462 205.8,729.3006 " fill="none" id="Fragment-Context" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><polygon fill="none" points="196,673.8438,205.8,645.8438,215.6,673.8438,196,673.8438" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><!--link Executable to Operator--><path d="M330.7024,133.2114 C300.7746,172.767 262.0254,223.9818 231.0238,264.9556 " fill="none" id="Executable-Operator" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><polygon fill="#A80036" points="335.0522,127.463,322.9862,134.1362,330.8305,133.0466,331.92,140.8909,335.0522,127.463" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><!--link Executable to Function--><path d="M425.3802,133.322 C443.086,156.723 463.8704,184.1924 484.3076,211.204 " fill="none" id="Executable-Function" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><polygon fill="#A80036" points="420.9478,127.463,424.08,140.8909,425.1695,133.0466,433.0138,134.1362,420.9478,127.463" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><!--link Function to FunctionContext--><path d="M578.2,462.6076 C578.2,542.4566 578.2,644.2268 578.2,715.9936 " fill="none" id="Function-FunctionContext" style="stroke: #A80036; stroke-width: 1.399999976158142; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="578.2,734.4778,583.8,726.0778,578.2,717.6778,572.6,726.0778,578.2,734.4778" style="stroke: #A80036; stroke-width: 1.399999976158142;"/><!--
@startuml

skinparam messagesize 70
skinparam handwritten false
skinparam backgroundColor #EEEBDC
skinparam class {


	ParticipantBorderColor DeepSkyBlue
	ParticipantBackgroundColor DodgerBlue
	ParticipantFontName Impact
	ParticipantFontSize 17
	ParticipantFontColor #A9DCDF

	ActorBackgroundColor aqua
	ActorFontColor DeepSkyBlue
	ActorFontSize 17
	ActorFontName Aapex
}

    interface  Context{
        - -
        + <b>Value  nextInstruction(Fragment)
        + <b>void   run(Fragment)
        ..
        {method} Implementation of the <b>SymbolTable
        ..
        {method} <b>I/O operations
    }
    interface Executable {
        + Value    execute(Context)
        + boolean  needsMoreArguments()
        + void     addArgument(Value argument)
    }
    interface Fragment{
        + boolean  hasNextInstruction()
        + Value    nextRawInstruction()
    }
    interface FunctionContext{
        - - -
        + Value     getOutputValue()
        + void      setOutputValue(Value)
        + void      stop()
        ..
        + Context   getGlobalContext()
    }

    Context <|- FunctionContext
    Fragment <|- - Context


    abstract class Value{
        + {abstract} String toString()
    }

    class ListValue{
        # List<Value> mList
        # Value get(int index)
        # int size()
    }
    abstract class Operator{
        + {static} DEFINED_OPS = {"make", "print", ...}
        ..@override..
        + {abstract} <b>Value   execute(Context)
        + boolean  needsMoreArguments()
        + void     addArgument(Value argument)
    }
    class Function {
        - {static} FUNCTION_OPS = {"stop", "output"}
        - List<WordValue>   mFormalArgList
        - List<Value>       mActualArgList
        - List<Value>       mInstructionList
        - LocalContext      mLocalContext
        ==
        + Function(String name, List<Value> list)
        + {static}boolean isFunction(ListValue)
        ..@override..
        + <b>Value   execute(Context)
        + boolean  needsMoreArguments()
        + void     addArgument(Value argument)
    }
    class CodeFragment{
        - int mInstructionPointer
        - -
        - CodeFragment(List<Value>)
        + void resetPointer()
        ..@override..
        + boolean hasNextInstruction()
        + Value   nextRawInstruction()
    }

    Value <|- ListValue
    Operator- -|>Value
    Executable <- - Operator
    ListValue <|- - Function
    Executable <- - Function
    ListValue <|- CodeFragment
    CodeFragment -> Fragment

    class Function.LocalContext{
        - Context     mGlobalContext
        - int         mInstructionPointer
        - SymbolTable mLocalTable
        - Value       mOutputValue
        - -
        LocalContext(Context globalContext)
        ..@override ..


    }
    Function *- - Function.LocalContext
    FunctionContext <- Function.LocalContext

    abstract class ListValue.Builder{
        {method}...
        {method}Some methods to generate ListValue

        + <b>ListValue buildList()
    }
    ListValue *- - ListValue.Builder
    Fragment  <- ListValue.Builder

    SymbolTable ..o Operator
    SymbolTable ..* Context

    Function ...* FunctionContext

    hide Function.LocalContext
    hide ListValue.Builder
    hide CodeFragment
    hide Value
    hide SymbolTable
    hide ListValue


class Interpreter {

}

hide Interpreter


Context <- Interpreter

class SymbolTable{
    - HashMap<String,Value>
    {method} Some operators about HashMap
}
class Expression{
    + {static} boolean   isExpression(String)
    + {static} WordValue build(String, Fragment)
    + {static} <b>Value    evaluate(Context, WordValue)


}
@enduml

PlantUML version 1.2017.15(Tue Jul 04 00:45:34 CST 2017)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_91-b14
Operating System: Linux
OS Version: 4.4.0-97-generic
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>